const m={"Content-Type":"application/json"},s=t=>`${t.replace(/\/?$/,"/")}api/`,h=(t,n="")=>{if(typeof t=="object"&&t.errno)throw new TypeError(`${n} failed with ${t.errno}: ${t.errmsg}`);return t},p=({serverURL:t,lang:n,paths:o,type:a,signal:e})=>fetch(`${s(t)}article?path=${encodeURIComponent(o.join(","))}&type=${encodeURIComponent(a.join(","))}&lang=${n}`,{signal:e}).then(r=>r.json()),d=({serverURL:t,lang:n,path:o,type:a,action:e})=>fetch(`${s(t)}article?lang=${n}`,{method:"POST",headers:m,body:JSON.stringify({path:o,type:a,action:e})}).then(r=>r.json()).then(r=>h(r,"Update counter").data),$=({serverURL:t,lang:n,path:o,page:a,pageSize:e,sortBy:r,signal:c,token:i})=>{const l={};return i&&(l.Authorization=`Bearer ${i}`),fetch(`${s(t)}comment?path=${encodeURIComponent(o)}&pageSize=${e}&page=${a}&lang=${n}&sortBy=${r}`,{signal:c,headers:l}).then(g=>g.json()).then(g=>h(g,"Get comment data").data)},u=({serverURL:t,lang:n,token:o,comment:a})=>{const e={"Content-Type":"application/json"};return o&&(e.Authorization=`Bearer ${o}`),fetch(`${s(t)}comment?lang=${n}`,{method:"POST",headers:e,body:JSON.stringify(a)}).then(r=>r.json())},y=({serverURL:t,lang:n,token:o,objectId:a})=>fetch(`${s(t)}comment/${a}?lang=${n}`,{method:"DELETE",headers:{Authorization:`Bearer ${o}`}}).then(e=>e.json()).then(e=>h(e,"Delete comment")),U=({serverURL:t,lang:n,token:o,objectId:a,comment:e})=>fetch(`${s(t)}comment/${a}?lang=${n}`,{method:"PUT",headers:{...m,Authorization:`Bearer ${o}`},body:JSON.stringify(e)}).then(r=>r.json()).then(r=>h(r,"Update comment")),f=({serverURL:t,lang:n,paths:o,signal:a})=>fetch(`${s(t)}comment?type=count&url=${encodeURIComponent(o.join(","))}&lang=${n}`,{signal:a}).then(e=>e.json()).then(e=>h(e,"Get comment count").data),R=({lang:t,serverURL:n})=>{const o=(window.innerWidth-450)/2,a=(window.innerHeight-450)/2,e=window.open(`${n.replace(/\/$/,"")}/ui/login?lng=${encodeURIComponent(t)}`,"_blank",`width=450,height=450,left=${o},top=${a},scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no`);return e?.postMessage({type:"TOKEN",data:null},"*"),new Promise(r=>{const c=({data:i})=>{!i||typeof i!="object"||i.type!=="userInfo"||i.data.token&&(e?.close(),window.removeEventListener("message",c),r(i.data))};window.addEventListener("message",c)})},j=({serverURL:t,lang:n,paths:o,signal:a})=>p({serverURL:t,lang:n,paths:o,type:["time"],signal:a}).then(e=>Array.isArray(e)?e:[e]),v=t=>d({...t,type:"time",action:"inc"}),w=({serverURL:t,lang:n,count:o,signal:a,token:e})=>{const r={};return e&&(r.Authorization=`Bearer ${e}`),fetch(`${s(t)}comment?type=recent&count=${o}&lang=${n}`,{signal:a,headers:r}).then(c=>c.json())},C=({serverURL:t,signal:n,pageSize:o,lang:a})=>fetch(`${s(t)}user?pageSize=${o}&lang=${a}`,{signal:n}).then(e=>e.json()).then(e=>h(e,"user list")).then(e=>e.data);export{u as addComment,y as deleteComment,f as fetchCommentCount,p as getArticleCounter,$ as getComment,j as getPageview,w as getRecentComment,C as getUserList,R as login,d as updateArticleCounter,U as updateComment,v as updatePageview};
//# sourceMappingURL=api.js.map
